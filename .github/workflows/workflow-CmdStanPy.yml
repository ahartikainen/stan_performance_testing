name: CmdStanPy

on: [push]

jobs:
  tests:
    name: CmdStanPy
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        cmdstan-version: [2.19.1, 2.22.1, 2.23.0]
        config:
          - {os: ubuntu-latest}
          - {os: macos-latest}
          - {os: windows-latest, rtools: 3.5, rtools2: 35}
          - {os: windows-latest, rtools: 4.0, rtools2: 40}
        python-version: [3.8]
      fail-fast: false
    steps:
      - name: Checkout github
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install CmdStanPy
        run: |
          python -m pip install --upgrade pip
          python -m pip install cmdstanpy[all] arviz

      - name: CmdStanPy version
        run: |
          python -c "import cmdstanpy,os;print('CmdStanPy version: {}\nLocation: {}'.format(cmdstanpy.__version__, os.path.dirname(cmdstanpy.__file__)))"

      - name: Inject RTools40 (Windows)
        run: |
          powershell -command "(Get-Content 'C:\\hostedtoolcache\\windows\\Python\\3.8.2\\x64\\lib\\site-packages\\cmdstanpy\\install_cxx_toolchain.py').replace('https://cran.r-project.org/bin/windows/testing/rtools40-x86_64.exe', 'https://cran.r-project.org/bin/windows/Rtools/rtools40-x86_64.exe') | Set-Content 'C:\\hostedtoolcache\\windows\\Python\\3.8.2\\x64\\lib\\site-packages\\cmdstanpy\\install_cxx_toolchain.py'"
        if: matrix.config.os == 'windows-latest'

      - name: Install toolchain (Windows)
        run: |
          python -m cmdstanpy.install_cxx_toolchain --dir C:\ --version ${{ matrix.config.rtools }}
          echo "::add-path::C:\RTools\RTools35\bin;C:\Rtools\RTools35\mingw_64\bin"
          echo "::add-path::C:\RTools\RTools40\usr\bin;C:\Rtools\RTools40\mingw64\bin"
        if: matrix.config.os == 'windows-latest'

      - name: Install mingw32-make RTools 4.0 (Windows)
        run: |
          pacman -Sy mingw-w64-x86_64-make
        if: (matrix.config.os == 'windows-latest') && (matrix.config.rtools2 == '40')

      - name: Check RTools 3.5 (Windows)
        run: |
          dir C:\RTools\RTools35\bin
          dir C:\Rtools\RTools35\mingw_64\bin
        if: (matrix.config.os == 'windows-latest') && (matrix.config.rtools2 == '35')

      - name: Check RTools 4.0 (Windows)
        run: |
          dir C:\RTools\RTools40\usr\bin
          dir C:\Rtools\RTools40\mingw64\bin
        if: (matrix.config.os == 'windows-latest') && (matrix.config.rtools2 == '40')
      
      - name: Install CmdStan (Windows)
        run: |
          SET MAKE=mingw32-make.exe
          gcc --version
          which gcc
          mingw32-make --version
          which mingw32-make
          python -m cmdstanpy.install_cmdstan --version ${{ matrix.cmdstan-version }}
        if: matrix.config.os == 'windows-latest'

      - name: Install CmdStan (Linux, macOS)
        run: |
          gcc --version
          which gcc
          make --version
          which make
          python -m cmdstanpy.install_cmdstan --version ${{ matrix.cmdstan-version }}
        if: matrix.config.os != 'windows-latest'

      - name: CmdStanPy speed test (Windows)
        run: |
          SET MAKE=mingw32-make.exe
          python run_CmdStanPy.py ${{ matrix.config.rtools2 }}
        if: matrix.config.os == 'windows-latest'

      - name: CmdStanPy speed test (macOS, Linux)
        run: |
          python run_CmdStanPy.py
        if: matrix.config.os != 'windows-latest'

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: CmdStanPy_results
          path: ./results
